server.port: 8443

server:
  ssl:
    key-store-type:  PKCS12
    key-store: classpath:keystore/edge.p12
    key-store-password: 123456
    key-alias: localhost

spring.application.name: gateway


spring.cloud.gateway.routes:

- id: product-composite
  uri: http://product-composite
  predicates:
  - Path=/product-composite/**

- id: oauth2-server
  uri: http://auth-server
  predicates:
    - Path=/oauth2/**

- id: oauth2-login
  uri: http://auth-server
  predicates:
    - Path=/login/**

- id: oauth2-error
  uri: http://auth-server
  predicates:
    - Path=/error/**

- id: product-composite-swagger-ui
  uri: http://product-composite
  predicates:
  - Path=/openapi/**

- id: host_route_200
  uri: http://httpstat.us
  predicates:
  - Host=i.feel.lucky:8080
  - Path=/headerrouting/**
  filters:
  - SetPath=/200

- id: host_route_418
  uri: http://httpstat.us
  predicates:
  - Host=im.a.teapot:8080
  - Path=/headerrouting/**
  filters:
  - SetPath=/418

- id: host_route_501
  uri: http://httpstat.us
  predicates:
  - Path=/headerrouting/**
  filters:
  - SetPath=/501

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    org.springframework.cloud.gateway: TRACE

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${app.auth-server}:9999

spring.sleuth.reactor.instrumentation-type: decorate-on-last
---
spring.config.activate.on-profile: docker

app.auth-server: auth-server
